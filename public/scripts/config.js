'use strict';

angular.module('scraper', ['ui.router', 'angularFileUpload', 'ngSanitize', 'ngCsv']).config(function ($stateProvider) {
	$stateProvider.state('index', {
		url: "",
		templateUrl: "./assets/landing.html",
		controller: "main",
		controllerAs: "main"
	});
}).factory('Add', function ($http, $location, $rootScope) {
	return {

		ship: function shipFile(data) {
			console.log('DATA COMING IN');
			console.log(data);
			return $http.post('/api/load', data).success(function (data) {
				console.log('DATA FIRED OUT');
				console.log(data);
			}).error(function (err) {
				console.info('error', err);
			});
		},
		exportExcel: function exportExcel() {
			$http({ method: 'GET', url: "/api/export",
				headers: { 'Content-Type': "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" },
				responseType: "arraybuffer" }).success(function (data, status, headers, config) {
				saveAs(new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" }), "excel111.xlsx");
			}).error(function (data, status, headers, config) {});
		}

	};
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zY3JpcHRzL2NvbmZpZy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sQ0FDTCxNQUFNLENBQUMsU0FBUyxFQUFFLENBQUUsV0FBVyxFQUFFLG1CQUFtQixFQUFFLFlBQVksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUU3RSxNQUFNLENBQUMsVUFBUyxjQUFjLEVBQUU7QUFDOUIsZUFBYyxDQUNYLEtBQUssQ0FBQyxPQUFPLEVBQUU7QUFDZCxLQUFHLEVBQUUsRUFBRTtBQUNMLGFBQVcsRUFBRSx1QkFBdUI7QUFDcEMsWUFBVSxFQUFFLE1BQU07QUFDbEIsY0FBWSxFQUFFLE1BQU07RUFDdkIsQ0FBQyxDQUFBO0NBQ04sQ0FBQyxDQUVELE9BQU8sQ0FBQyxLQUFLLEVBQUUsVUFBVSxLQUFLLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRTtBQUN2RCxRQUFPOztBQUVOLE1BQUksRUFBRSxTQUFTLFFBQVEsQ0FBQyxJQUFJLEVBQUU7QUFDN0IsVUFBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0FBQzlCLFVBQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDbEIsVUFBTyxLQUFLLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBVSxJQUFJLEVBQUU7QUFDNUQsV0FBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0FBQzlCLFdBQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbEIsQ0FBQyxDQUFDLEtBQUssQ0FBQyxVQUFVLEdBQUcsRUFBRTtBQUN2QixXQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUMsQ0FBQTtJQUMxQixDQUFDLENBQUM7R0FDSDtBQUNELGFBQVcsRUFBRSx1QkFBWTtBQUN4QixRQUFLLENBQUMsRUFBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxhQUFhO0FBQ3hDLFdBQU8sRUFBRSxFQUFDLGNBQWMsRUFBRSxtRUFBbUUsRUFBQztBQUN4RixnQkFBWSxFQUFFLGFBQWEsRUFBQyxDQUFDLENBQzdCLE9BQU8sQ0FBQyxVQUFTLElBQUksRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRTtBQUM1QyxVQUFNLENBQUMsSUFBSSxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBQyxFQUFDLElBQUksRUFBQyxtRUFBbUUsRUFBQyxDQUFDLEVBQUUsZUFBZSxDQUFDLENBQUM7SUFDeEgsQ0FBQyxDQUFDLEtBQUssQ0FBQyxVQUFTLElBQUksRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUV0RCxDQUFDLENBQUM7R0FDSDs7RUFFRCxDQUFDO0NBQ0YsQ0FBQyxDQUFBIiwiZmlsZSI6ImNvbmZpZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXJcblx0Lm1vZHVsZSgnc2NyYXBlcicsIFsgJ3VpLnJvdXRlcicsICdhbmd1bGFyRmlsZVVwbG9hZCcsICduZ1Nhbml0aXplJywgJ25nQ3N2J10pXG5cblx0LmNvbmZpZyhmdW5jdGlvbigkc3RhdGVQcm92aWRlcikge1xuXHQgIFx0JHN0YXRlUHJvdmlkZXJcblx0XHQgICAgLnN0YXRlKCdpbmRleCcsIHtcblx0XHQgICAgICB1cmw6IFwiXCIsXG4gICAgICBcdFx0ICB0ZW1wbGF0ZVVybDogXCIuL2Fzc2V0cy9sYW5kaW5nLmh0bWxcIixcbiAgICAgIFx0XHQgIGNvbnRyb2xsZXI6IFwibWFpblwiLFxuICAgICAgXHRcdCAgY29udHJvbGxlckFzOiBcIm1haW5cIlxuXHRcdCAgICB9KVxuXHR9KVxuXG5cdC5mYWN0b3J5KCdBZGQnLCBmdW5jdGlvbiAoJGh0dHAsICRsb2NhdGlvbiwgJHJvb3RTY29wZSkge1xuXHRcdHJldHVybiB7XG5cblx0XHRcdHNoaXA6IGZ1bmN0aW9uIHNoaXBGaWxlKGRhdGEpIHtcblx0XHRcdFx0Y29uc29sZS5sb2coJ0RBVEEgQ09NSU5HIElOJyk7XG5cdFx0XHRcdGNvbnNvbGUubG9nKGRhdGEpO1xuXHRcdFx0XHRyZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9sb2FkJywgZGF0YSkuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSkge1xuXHRcdFx0XHRcdGNvbnNvbGUubG9nKCdEQVRBIEZJUkVEIE9VVCcpO1xuXHRcdFx0XHRcdGNvbnNvbGUubG9nKGRhdGEpO1xuXHRcdFx0XHR9KS5lcnJvcihmdW5jdGlvbiAoZXJyKSB7XG5cdFx0XHRcdFx0Y29uc29sZS5pbmZvKCdlcnJvcicsIGVycilcblx0XHRcdFx0fSk7XG5cdFx0XHR9LFxuXHRcdFx0ZXhwb3J0RXhjZWw6IGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0JGh0dHAoe21ldGhvZDogJ0dFVCcsIHVybDogXCIvYXBpL2V4cG9ydFwiLFxuXHRcdFx0XHRoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6IFwiYXBwbGljYXRpb24vdm5kLm9wZW54bWxmb3JtYXRzLW9mZmljZWRvY3VtZW50LnNwcmVhZHNoZWV0bWwuc2hlZXRcIn0sXG5cdFx0ICAgICAgICByZXNwb25zZVR5cGU6IFwiYXJyYXlidWZmZXJcIn0pLiAgICAgICAgICAgICBcblx0XHQgICAgICAgIHN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSwgc3RhdHVzLCBoZWFkZXJzLCBjb25maWcpIHsgIFxuXHRcdCAgICAgICAgICAgIHNhdmVBcyhuZXcgQmxvYihbZGF0YV0se3R5cGU6XCJhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQuc3ByZWFkc2hlZXRtbC5zaGVldFwifSksIFwiZXhjZWwxMTEueGxzeFwiKTtcblx0XHQgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uKGRhdGEsIHN0YXR1cywgaGVhZGVycywgY29uZmlnKSB7XG5cblx0XHRcdFx0fSk7ICBcblx0XHRcdH1cblxuXHRcdH07XG5cdH0pXG5cbiJdfQ==
